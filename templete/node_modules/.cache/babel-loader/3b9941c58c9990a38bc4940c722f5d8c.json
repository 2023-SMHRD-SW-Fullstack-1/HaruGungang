{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction normalizeOptions(config) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\" ? _path().default.relative(cwd, filename) : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    moduleRoot,\n    sourceRoot = moduleRoot,\n    sourceFileName = _path().default.basename(filenameRelative),\n    comments = true,\n    compact = \"auto\"\n  } = config.options;\n  const opts = config.options;\n  const options = Object.assign({}, opts, {\n    parserOpts: Object.assign({\n      sourceType: _path().default.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: Object.assign({\n      filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n      sourceMaps,\n      sourceRoot,\n      sourceFileName\n    }, opts.generatorOpts)\n  });\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n  return options;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","normalizeOptions","_path","data","_interopRequireDefault","require","obj","__esModule","config","filename","cwd","filenameRelative","relative","sourceType","inputSourceMap","sourceMaps","moduleRoot","sourceRoot","sourceFileName","basename","comments","compact","options","opts","assign","parserOpts","extname","plugins","generatorOpts","auxiliaryCommentBefore","auxiliaryCommentAfter","retainLines","shouldPrintComment","minified","passes","plugin","manipulateOptions"],"sources":["C:/Users/SMHRD/Desktop/HaruGungang/templete/node_modules/@babel/core/lib/transformation/normalize-opts.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normalizeOptions(config) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\" ? _path().default.relative(cwd, filename) : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    moduleRoot,\n    sourceRoot = moduleRoot,\n    sourceFileName = _path().default.basename(filenameRelative),\n    comments = true,\n    compact = \"auto\"\n  } = config.options;\n  const opts = config.options;\n  const options = Object.assign({}, opts, {\n    parserOpts: Object.assign({\n      sourceType: _path().default.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: Object.assign({\n      filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n      sourceMaps,\n      sourceRoot,\n      sourceFileName\n    }, opts.generatorOpts)\n  });\n\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,gBAAgB;AAElC,SAASC,KAAKA,CAAA,EAAG;EACf,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEpDH,KAAK,GAAG,SAAAA,CAAA,EAAY;IAClB,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASC,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAE9F,SAASL,gBAAgBA,CAACO,MAAM,EAAE;EAChC,MAAM;IACJC,QAAQ;IACRC,GAAG;IACHC,gBAAgB,GAAG,OAAOF,QAAQ,KAAK,QAAQ,GAAGP,KAAK,CAAC,CAAC,CAACF,OAAO,CAACY,QAAQ,CAACF,GAAG,EAAED,QAAQ,CAAC,GAAG,SAAS;IACrGI,UAAU,GAAG,QAAQ;IACrBC,cAAc;IACdC,UAAU,GAAG,CAAC,CAACD,cAAc;IAC7BE,UAAU;IACVC,UAAU,GAAGD,UAAU;IACvBE,cAAc,GAAGhB,KAAK,CAAC,CAAC,CAACF,OAAO,CAACmB,QAAQ,CAACR,gBAAgB,CAAC;IAC3DS,QAAQ,GAAG,IAAI;IACfC,OAAO,GAAG;EACZ,CAAC,GAAGb,MAAM,CAACc,OAAO;EAClB,MAAMC,IAAI,GAAGf,MAAM,CAACc,OAAO;EAC3B,MAAMA,OAAO,GAAG1B,MAAM,CAAC4B,MAAM,CAAC,CAAC,CAAC,EAAED,IAAI,EAAE;IACtCE,UAAU,EAAE7B,MAAM,CAAC4B,MAAM,CAAC;MACxBX,UAAU,EAAEX,KAAK,CAAC,CAAC,CAACF,OAAO,CAAC0B,OAAO,CAACf,gBAAgB,CAAC,KAAK,MAAM,GAAG,QAAQ,GAAGE,UAAU;MACxFK,cAAc,EAAET,QAAQ;MACxBkB,OAAO,EAAE;IACX,CAAC,EAAEJ,IAAI,CAACE,UAAU,CAAC;IACnBG,aAAa,EAAEhC,MAAM,CAAC4B,MAAM,CAAC;MAC3Bf,QAAQ;MACRoB,sBAAsB,EAAEN,IAAI,CAACM,sBAAsB;MACnDC,qBAAqB,EAAEP,IAAI,CAACO,qBAAqB;MACjDC,WAAW,EAAER,IAAI,CAACQ,WAAW;MAC7BX,QAAQ;MACRY,kBAAkB,EAAET,IAAI,CAACS,kBAAkB;MAC3CX,OAAO;MACPY,QAAQ,EAAEV,IAAI,CAACU,QAAQ;MACvBlB,UAAU;MACVE,UAAU;MACVC;IACF,CAAC,EAAEK,IAAI,CAACK,aAAa;EACvB,CAAC,CAAC;EAEF,KAAK,MAAMD,OAAO,IAAInB,MAAM,CAAC0B,MAAM,EAAE;IACnC,KAAK,MAAMC,MAAM,IAAIR,OAAO,EAAE;MAC5B,IAAIQ,MAAM,CAACC,iBAAiB,EAAE;QAC5BD,MAAM,CAACC,iBAAiB,CAACd,OAAO,EAAEA,OAAO,CAACG,UAAU,CAAC;MACvD;IACF;EACF;EAEA,OAAOH,OAAO;AAChB"},"metadata":{},"sourceType":"script"}