{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.checkNoUnwrappedItemOptionPairs = checkNoUnwrappedItemOptionPairs;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nvar _removed = _interopRequireDefault(require(\"./removed\"));\nvar _optionAssertions = require(\"./option-assertions\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst ROOT_VALIDATORS = {\n  cwd: _optionAssertions.assertString,\n  root: _optionAssertions.assertString,\n  rootMode: _optionAssertions.assertRootMode,\n  configFile: _optionAssertions.assertConfigFileSearch,\n  caller: _optionAssertions.assertCallerMetadata,\n  filename: _optionAssertions.assertString,\n  filenameRelative: _optionAssertions.assertString,\n  code: _optionAssertions.assertBoolean,\n  ast: _optionAssertions.assertBoolean,\n  envName: _optionAssertions.assertString\n};\nconst BABELRC_VALIDATORS = {\n  babelrc: _optionAssertions.assertBoolean,\n  babelrcRoots: _optionAssertions.assertBabelrcSearch\n};\nconst NONPRESET_VALIDATORS = {\n  extends: _optionAssertions.assertString,\n  ignore: _optionAssertions.assertIgnoreList,\n  only: _optionAssertions.assertIgnoreList\n};\nconst COMMON_VALIDATORS = {\n  inputSourceMap: _optionAssertions.assertInputSourceMap,\n  presets: _optionAssertions.assertPluginList,\n  plugins: _optionAssertions.assertPluginList,\n  passPerPreset: _optionAssertions.assertBoolean,\n  env: assertEnvSet,\n  overrides: assertOverridesList,\n  test: _optionAssertions.assertConfigApplicableTest,\n  include: _optionAssertions.assertConfigApplicableTest,\n  exclude: _optionAssertions.assertConfigApplicableTest,\n  retainLines: _optionAssertions.assertBoolean,\n  comments: _optionAssertions.assertBoolean,\n  shouldPrintComment: _optionAssertions.assertFunction,\n  compact: _optionAssertions.assertCompact,\n  minified: _optionAssertions.assertBoolean,\n  auxiliaryCommentBefore: _optionAssertions.assertString,\n  auxiliaryCommentAfter: _optionAssertions.assertString,\n  sourceType: _optionAssertions.assertSourceType,\n  wrapPluginVisitorMethod: _optionAssertions.assertFunction,\n  highlightCode: _optionAssertions.assertBoolean,\n  sourceMaps: _optionAssertions.assertSourceMaps,\n  sourceMap: _optionAssertions.assertSourceMaps,\n  sourceFileName: _optionAssertions.assertString,\n  sourceRoot: _optionAssertions.assertString,\n  getModuleId: _optionAssertions.assertFunction,\n  moduleRoot: _optionAssertions.assertString,\n  moduleIds: _optionAssertions.assertBoolean,\n  moduleId: _optionAssertions.assertString,\n  parserOpts: _optionAssertions.assertObject,\n  generatorOpts: _optionAssertions.assertObject\n};\nfunction getSource(loc) {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\nfunction validate(type, opts) {\n  return validateNested({\n    type: \"root\",\n    source: type\n  }, opts);\n}\nfunction validateNested(loc, opts) {\n  const type = getSource(loc);\n  assertNoDuplicateSourcemap(opts);\n  Object.keys(opts).forEach(key => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc\n    };\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);\n    }\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);\n    }\n    if (type !== \"arguments\" && type !== \"configfile\" && BABELRC_VALIDATORS[key]) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);\n      }\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);\n    }\n    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;\n    validator(optLoc, opts[key]);\n  });\n  return opts;\n}\nfunction throwUnknownError(loc) {\n  const key = loc.name;\n  if (_removed.default[key]) {\n    const {\n      message,\n      version = 5\n    } = _removed.default[key];\n    throw new Error(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);\n  } else {\n    const unknownOptErr = new Error(`Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);\n    unknownOptErr.code = \"BABEL_UNKNOWN_OPTION\";\n    throw unknownOptErr;\n  }\n}\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction assertNoDuplicateSourcemap(opts) {\n  if (has(opts, \"sourceMap\") && has(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\nfunction assertEnvSet(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);\n  }\n  const parent = loc.parent;\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n  if (obj) {\n    for (const envName of Object.keys(obj)) {\n      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);\n      if (!env) continue;\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent\n      };\n      validateNested(envLoc, env);\n    }\n  }\n  return obj;\n}\nfunction assertOverridesList(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);\n  }\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);\n  }\n  const parent = loc.parent;\n  const arr = (0, _optionAssertions.assertArray)(loc, value);\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = (0, _optionAssertions.access)(loc, index);\n      const env = (0, _optionAssertions.assertObject)(objLoc, item);\n      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent\n      };\n      validateNested(overridesLoc, env);\n    }\n  }\n  return arr;\n}\nfunction checkNoUnwrappedItemOptionPairs(lastItem, thisItem, type, index, e) {\n  if (lastItem.file && lastItem.options === undefined && typeof thisItem.value === \"object\") {\n    e.message += `\\n- Maybe you meant to use\\n` + `\"${type}\": [\\n  [\"${lastItem.file.request}\", ${JSON.stringify(thisItem.value, undefined, 2)}]\\n]\\n` + `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","validate","checkNoUnwrappedItemOptionPairs","_plugin","_interopRequireDefault","require","_removed","_optionAssertions","obj","__esModule","default","ROOT_VALIDATORS","cwd","assertString","root","rootMode","assertRootMode","configFile","assertConfigFileSearch","caller","assertCallerMetadata","filename","filenameRelative","code","assertBoolean","ast","envName","BABELRC_VALIDATORS","babelrc","babelrcRoots","assertBabelrcSearch","NONPRESET_VALIDATORS","extends","ignore","assertIgnoreList","only","COMMON_VALIDATORS","inputSourceMap","assertInputSourceMap","presets","assertPluginList","plugins","passPerPreset","env","assertEnvSet","overrides","assertOverridesList","test","assertConfigApplicableTest","include","exclude","retainLines","comments","shouldPrintComment","assertFunction","compact","assertCompact","minified","auxiliaryCommentBefore","auxiliaryCommentAfter","sourceType","assertSourceType","wrapPluginVisitorMethod","highlightCode","sourceMaps","assertSourceMaps","sourceMap","sourceFileName","sourceRoot","getModuleId","moduleRoot","moduleIds","moduleId","parserOpts","assertObject","generatorOpts","getSource","loc","type","source","parent","opts","validateNested","assertNoDuplicateSourcemap","keys","forEach","key","optLoc","name","Error","msg","validator","throwUnknownError","message","version","unknownOptErr","has","prototype","hasOwnProperty","call","access","envLoc","arr","assertArray","index","item","entries","objLoc","overridesLoc","lastItem","thisItem","e","file","options","undefined","request","JSON","stringify"],"sources":["C:/Users/SMHRD/Desktop/HaruGungang/templete/node_modules/@babel/core/lib/config/validation/options.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.checkNoUnwrappedItemOptionPairs = checkNoUnwrappedItemOptionPairs;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _removed = _interopRequireDefault(require(\"./removed\"));\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst ROOT_VALIDATORS = {\n  cwd: _optionAssertions.assertString,\n  root: _optionAssertions.assertString,\n  rootMode: _optionAssertions.assertRootMode,\n  configFile: _optionAssertions.assertConfigFileSearch,\n  caller: _optionAssertions.assertCallerMetadata,\n  filename: _optionAssertions.assertString,\n  filenameRelative: _optionAssertions.assertString,\n  code: _optionAssertions.assertBoolean,\n  ast: _optionAssertions.assertBoolean,\n  envName: _optionAssertions.assertString\n};\nconst BABELRC_VALIDATORS = {\n  babelrc: _optionAssertions.assertBoolean,\n  babelrcRoots: _optionAssertions.assertBabelrcSearch\n};\nconst NONPRESET_VALIDATORS = {\n  extends: _optionAssertions.assertString,\n  ignore: _optionAssertions.assertIgnoreList,\n  only: _optionAssertions.assertIgnoreList\n};\nconst COMMON_VALIDATORS = {\n  inputSourceMap: _optionAssertions.assertInputSourceMap,\n  presets: _optionAssertions.assertPluginList,\n  plugins: _optionAssertions.assertPluginList,\n  passPerPreset: _optionAssertions.assertBoolean,\n  env: assertEnvSet,\n  overrides: assertOverridesList,\n  test: _optionAssertions.assertConfigApplicableTest,\n  include: _optionAssertions.assertConfigApplicableTest,\n  exclude: _optionAssertions.assertConfigApplicableTest,\n  retainLines: _optionAssertions.assertBoolean,\n  comments: _optionAssertions.assertBoolean,\n  shouldPrintComment: _optionAssertions.assertFunction,\n  compact: _optionAssertions.assertCompact,\n  minified: _optionAssertions.assertBoolean,\n  auxiliaryCommentBefore: _optionAssertions.assertString,\n  auxiliaryCommentAfter: _optionAssertions.assertString,\n  sourceType: _optionAssertions.assertSourceType,\n  wrapPluginVisitorMethod: _optionAssertions.assertFunction,\n  highlightCode: _optionAssertions.assertBoolean,\n  sourceMaps: _optionAssertions.assertSourceMaps,\n  sourceMap: _optionAssertions.assertSourceMaps,\n  sourceFileName: _optionAssertions.assertString,\n  sourceRoot: _optionAssertions.assertString,\n  getModuleId: _optionAssertions.assertFunction,\n  moduleRoot: _optionAssertions.assertString,\n  moduleIds: _optionAssertions.assertBoolean,\n  moduleId: _optionAssertions.assertString,\n  parserOpts: _optionAssertions.assertObject,\n  generatorOpts: _optionAssertions.assertObject\n};\n\nfunction getSource(loc) {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\n\nfunction validate(type, opts) {\n  return validateNested({\n    type: \"root\",\n    source: type\n  }, opts);\n}\n\nfunction validateNested(loc, opts) {\n  const type = getSource(loc);\n  assertNoDuplicateSourcemap(opts);\n  Object.keys(opts).forEach(key => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc\n    };\n\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);\n    }\n\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);\n    }\n\n    if (type !== \"arguments\" && type !== \"configfile\" && BABELRC_VALIDATORS[key]) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);\n      }\n\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);\n    }\n\n    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;\n    validator(optLoc, opts[key]);\n  });\n  return opts;\n}\n\nfunction throwUnknownError(loc) {\n  const key = loc.name;\n\n  if (_removed.default[key]) {\n    const {\n      message,\n      version = 5\n    } = _removed.default[key];\n    throw new Error(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);\n  } else {\n    const unknownOptErr = new Error(`Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);\n    unknownOptErr.code = \"BABEL_UNKNOWN_OPTION\";\n    throw unknownOptErr;\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction assertNoDuplicateSourcemap(opts) {\n  if (has(opts, \"sourceMap\") && has(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\n\nfunction assertEnvSet(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);\n  }\n\n  const parent = loc.parent;\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n\n  if (obj) {\n    for (const envName of Object.keys(obj)) {\n      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);\n      if (!env) continue;\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent\n      };\n      validateNested(envLoc, env);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertOverridesList(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);\n  }\n\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);\n  }\n\n  const parent = loc.parent;\n  const arr = (0, _optionAssertions.assertArray)(loc, value);\n\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = (0, _optionAssertions.access)(loc, index);\n      const env = (0, _optionAssertions.assertObject)(objLoc, item);\n      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent\n      };\n      validateNested(overridesLoc, env);\n    }\n  }\n\n  return arr;\n}\n\nfunction checkNoUnwrappedItemOptionPairs(lastItem, thisItem, type, index, e) {\n  if (lastItem.file && lastItem.options === undefined && typeof thisItem.value === \"object\") {\n    e.message += `\\n- Maybe you meant to use\\n` + `\"${type}\": [\\n  [\"${lastItem.file.request}\", ${JSON.stringify(thisItem.value, undefined, 2)}]\\n]\\n` + `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}