{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n  _parser = function () {\n    return data;\n  };\n  return data;\n}\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n  _codeFrame = function () {\n    return data;\n  };\n  return data;\n}\nvar _missingPluginHelper = _interopRequireDefault(require(\"./util/missing-plugin-helper\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction* parser(pluginPasses, {\n  parserOpts,\n  highlightCode = true,\n  filename = \"unknown\"\n}, code) {\n  try {\n    const results = [];\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      yield* [];\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n      return results[0];\n    }\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n    const {\n      loc,\n      missingPlugin\n    } = err;\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n    throw err;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","parser","_parser","data","require","_codeFrame","_missingPluginHelper","_interopRequireDefault","obj","__esModule","pluginPasses","parserOpts","highlightCode","filename","code","results","plugins","plugin","parserOverride","ast","parse","undefined","push","length","then","Error","err","message","loc","missingPlugin","codeFrame","codeFrameColumns","start","line","column"],"sources":["C:/Users/SMHRD/Desktop/HaruGungang/templete/node_modules/@babel/core/lib/parser/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _missingPluginHelper = _interopRequireDefault(require(\"./util/missing-plugin-helper\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction* parser(pluginPasses, {\n  parserOpts,\n  highlightCode = true,\n  filename = \"unknown\"\n}, code) {\n  try {\n    const results = [];\n\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      yield* [];\n\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n\n      return results[0];\n    }\n\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n\n    const {\n      loc,\n      missingPlugin\n    } = err;\n\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}