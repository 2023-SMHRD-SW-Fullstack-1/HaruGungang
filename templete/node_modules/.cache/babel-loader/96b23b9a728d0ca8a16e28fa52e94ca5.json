{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = simplifyAccess;\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction simplifyAccess(path, bindingNames) {\n  path.traverse(simpleAssignmentVisitor, {\n    scope: path.scope,\n    bindingNames,\n    seen: new WeakSet()\n  });\n}\nconst simpleAssignmentVisitor = {\n  UpdateExpression: {\n    exit(path) {\n      const {\n        scope,\n        bindingNames\n      } = this;\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (!bindingNames.has(localName)) return;\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord()) {\n        const operator = path.node.operator == \"++\" ? \"+=\" : \"-=\";\n        path.replaceWith(t.assignmentExpression(operator, arg.node, t.numericLiteral(1)));\n      } else if (path.node.prefix) {\n        path.replaceWith(t.assignmentExpression(\"=\", t.identifier(localName), t.binaryExpression(path.node.operator[0], t.unaryExpression(\"+\", arg.node), t.numericLiteral(1))));\n      } else {\n        const old = path.scope.generateUidIdentifierBasedOnNode(arg.node, \"old\");\n        const varName = old.name;\n        path.scope.push({\n          id: old\n        });\n        const binary = t.binaryExpression(path.node.operator[0], t.identifier(varName), t.numericLiteral(1));\n        path.replaceWith(t.sequenceExpression([t.assignmentExpression(\"=\", t.identifier(varName), t.unaryExpression(\"+\", arg.node)), t.assignmentExpression(\"=\", t.cloneNode(arg.node), binary), t.identifier(varName)]));\n      }\n    }\n  },\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        bindingNames\n      } = this;\n      if (path.node.operator === \"=\") return;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n      if (!left.isIdentifier()) return;\n      const localName = left.node.name;\n      if (!bindingNames.has(localName)) return;\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n      path.node.right = t.binaryExpression(path.node.operator.slice(0, -1), t.cloneNode(path.node.left), path.node.right);\n      path.node.operator = \"=\";\n    }\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","default","simplifyAccess","t","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","path","bindingNames","traverse","simpleAssignmentVisitor","scope","seen","WeakSet","UpdateExpression","exit","arg","isIdentifier","localName","node","name","getBinding","parentPath","isExpressionStatement","isCompletionRecord","operator","replaceWith","assignmentExpression","numericLiteral","prefix","identifier","binaryExpression","unaryExpression","old","generateUidIdentifierBasedOnNode","varName","push","id","binary","sequenceExpression","cloneNode","AssignmentExpression","add","left","right","slice"],"sources":["C:/Users/SMHRD/Desktop/HaruGungang/templete/node_modules/@babel/helper-simple-access/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = simplifyAccess;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction simplifyAccess(path, bindingNames) {\n  path.traverse(simpleAssignmentVisitor, {\n    scope: path.scope,\n    bindingNames,\n    seen: new WeakSet()\n  });\n}\n\nconst simpleAssignmentVisitor = {\n  UpdateExpression: {\n    exit(path) {\n      const {\n        scope,\n        bindingNames\n      } = this;\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (!bindingNames.has(localName)) return;\n\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord()) {\n        const operator = path.node.operator == \"++\" ? \"+=\" : \"-=\";\n        path.replaceWith(t.assignmentExpression(operator, arg.node, t.numericLiteral(1)));\n      } else if (path.node.prefix) {\n        path.replaceWith(t.assignmentExpression(\"=\", t.identifier(localName), t.binaryExpression(path.node.operator[0], t.unaryExpression(\"+\", arg.node), t.numericLiteral(1))));\n      } else {\n        const old = path.scope.generateUidIdentifierBasedOnNode(arg.node, \"old\");\n        const varName = old.name;\n        path.scope.push({\n          id: old\n        });\n        const binary = t.binaryExpression(path.node.operator[0], t.identifier(varName), t.numericLiteral(1));\n        path.replaceWith(t.sequenceExpression([t.assignmentExpression(\"=\", t.identifier(varName), t.unaryExpression(\"+\", arg.node)), t.assignmentExpression(\"=\", t.cloneNode(arg.node), binary), t.identifier(varName)]));\n      }\n    }\n\n  },\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        bindingNames\n      } = this;\n      if (path.node.operator === \"=\") return;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n      if (!left.isIdentifier()) return;\n      const localName = left.node.name;\n      if (!bindingNames.has(localName)) return;\n\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n\n      path.node.right = t.binaryExpression(path.node.operator.slice(0, -1), t.cloneNode(path.node.left), path.node.right);\n      path.node.operator = \"=\";\n    }\n\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}